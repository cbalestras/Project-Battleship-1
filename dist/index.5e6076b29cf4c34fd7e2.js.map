{"version":3,"file":"index.5e6076b29cf4c34fd7e2.js","mappings":"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","sources":["webpack://battleship-game/./src/resources/styles.css","webpack://battleship-game/./node_modules/css-loader/dist/runtime/api.js","webpack://battleship-game/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://battleship-game/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://battleship-game/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://battleship-game/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://battleship-game/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://battleship-game/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://battleship-game/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://battleship-game/webpack/bootstrap","webpack://battleship-game/webpack/runtime/compat get default export","webpack://battleship-game/webpack/runtime/define property getters","webpack://battleship-game/webpack/runtime/hasOwnProperty shorthand","webpack://battleship-game/webpack/runtime/nonce","webpack://battleship-game/./src/resources/styles.css?6f91","webpack://battleship-game/./src/gameBoard.js","webpack://battleship-game/./src/player.js","webpack://battleship-game/./src/ship.js","webpack://battleship-game/./src/gameDisplay.js","webpack://battleship-game/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\n    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    color: #F9FAFB;\n    background-color: #0F1115;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 70px 1fr 60px;\n    margin: 0 auto;\n    height: 100vh;\n    border-bottom: 1px solid rgba(249, 250, 251, 0.1);\n    font-size: 16px;\n    line-height: 1.5;\n    letter-spacing: -0.011em;\n}\n\nheader {\n    grid-row: 1 / 2;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-bottom: 1px solid rgba(249, 250, 251, 0.1);\n}\n\n.header-container {\n    width: 1200px;\n    margin: 0 auto;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 20px;\n}\n\n.header-container h1 {\n    font-weight: 700;\n    font-size: 24px;\n    background: linear-gradient(90deg, #f9fafb 0%, #9ca3af 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n}\n\n.updates {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 40px;\n    background-color: rgba(249, 250, 251, 0.05);\n    padding: 0 16px;\n    border-radius: 6px;\n    font-weight: 500;\n}\n\nmain {\n    padding-top: 60px;\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n\n.grid-identifier {\n    margin-top: -20px;\n    height: 40px;\n    display: flex;\n    align-items: flex-start;\n    gap: 550px;\n    font-weight: 600;\n}\n\n.game-space {\n    width: 1200px;\n    height: 400px;\n    margin: 0 auto;\n    display: grid;\n    place-items: start center;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr;\n    gap: 20px;\n}\n\n.one {\n    grid-column: 1 / 2;\n}\n\n.two {\n    grid-column: 2 / 3;\n}\n\n.player-space {\n    width: 400px;\n    height: inherit;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 20px 1fr;\n}\n\n.columns {\n    grid-row: 1 / 2;\n    height: 25px;\n    padding-left: 25px;\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    justify-items: center;\n    align-items: start;\n    color: rgba(249, 250, 251, 0.7);\n}\n\n.rows-and-board {\n    grid-row: 2 / 3;\n    display: grid;\n    grid-template-columns: 25px 1fr;\n}\n\n.rows-identity {\n    display: grid;\n    grid-template-rows: repeat(10, 1fr);\n    justify-items: center;\n    align-items: center;\n    grid-column: 1 / 2;\n    color: rgba(249, 250, 251, 0.7);\n}\n\n.rows-and-board div:nth-child(2) {\n    grid-column: 2 / 3;\n}\n\n.player-one-board,\n.player-two-board {\n    border: 1px solid rgba(249, 250, 251, 0.1);\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    grid-template-rows: repeat(10, 1fr);\n    gap: 2px;\n    background-color: rgba(249, 250, 251, 0.05);\n    border-radius: 6px;\n    overflow: hidden;\n}\n\n.cell {\n    background-color: #1A1D24;\n    display: grid;\n    place-content: center;\n    transition: all 0.2s ease;\n    font-size: 15px;\n    width: 100%;\n    height: 100%;\n}\n\n.cell:hover {\n    background-color: #2D3748;\n    cursor: pointer;\n}\n\n/* Ship display styles */\n.player-ship {\n    background-color: rgba(76, 81, 191, 0.3) !important;\n    border: 1px solid rgba(76, 81, 191, 0.5);\n}\n\n.hit-ship {\n    background-color: rgba(52, 211, 153, 0.8) !important;\n    color: #1A1D24;\n    font-weight: bold;\n}\n\n.sunk-ship {\n    background-color: rgba(56, 189, 248, 0.8) !important;\n    color: #1A1D24;\n    font-weight: bold;\n}\n\n.miss-hit {\n    color: rgba(249, 250, 251, 0.7);\n}\n\n.random {\n    margin: 40px auto 0;\n    width: 1200px;\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n}\n\n.random * {\n    cursor: pointer;\n    color: #F9FAFB;\n}\n\n#randomizeButton, .restart, #playButton {\n    background-color: transparent;\n    border: 1px solid rgba(249, 250, 251, 0.2);\n    border-radius: 6px;\n    padding: 12px 20px;\n    font-weight: 500;\n    transition: all 0.2s ease;\n    min-width: 120px;\n}\n\n#randomizeButton:hover, .restart:hover {\n    background-color: rgba(249, 250, 251, 0.05);\n    border-color: rgba(249, 250, 251, 0.3);\n}\n\n#playButton {\n    background: linear-gradient(90deg, #4F46E5 0%, #6366F1 100%);\n    border: none;\n}\n\n#playButton:hover {\n    opacity: 0.9;\n}\n\nfooter {\n    grid-column: 1 / 2;\n    grid-row: 3 / 4;\n    align-self: center;\n    margin: 0 auto;\n    width: 1200px;\n    display: flex;\n    justify-content: space-between;\n    padding: 0 20px;\n    color: rgba(249, 250, 251, 0.6);\n    font-size: 14px;\n}\n\n.fun-stuff {\n    display: flex;\n    justify-content: space-evenly;\n    gap: 20px;\n}\n\n.fun-stuff p {\n    cursor: pointer;\n    transition: color 0.2s ease;\n}\n\n.fun-stuff p:hover {\n    color: #F9FAFB;\n}\n\n/* Popup styling */\n.popup-container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 100;\n}\n\n.popup {\n    background-color: #1A1D24;\n    padding: 30px;\n    border-radius: 10px;\n    width: 400px;\n    text-align: center;\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\n    border: 1px solid rgba(249, 250, 251, 0.1);\n}\n\n.popup h2 {\n    margin-bottom: 20px;\n    background: linear-gradient(90deg, #4F46E5 0%, #6366F1 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    font-weight: 700;\n}\n\n.popup p {\n    margin-bottom: 25px;\n    color: rgba(249, 250, 251, 0.9);\n}\n\n/* Hit announcement popup */\n.hit-announcement {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: linear-gradient(135deg, rgba(79, 70, 229, 0.9) 0%, rgba(52, 211, 153, 0.9) 100%);\n    color: white;\n    padding: 20px 40px;\n    border-radius: 12px;\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\n    z-index: 90;\n    text-align: center;\n    opacity: 0;\n    transition: opacity 0.3s ease, transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    pointer-events: none;\n}\n\n/* Sunk ship announcement popup */\n.sunk-announcement {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: linear-gradient(135deg, rgba(56, 189, 248, 0.9) 0%, rgba(6, 182, 212, 0.9) 100%);\n    color: white;\n    padding: 20px 40px;\n    border-radius: 12px;\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\n    z-index: 90;\n    text-align: center;\n    opacity: 0;\n    transition: opacity 0.3s ease, transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    pointer-events: none;\n}\n\n.hit-announcement.show, .sunk-announcement.show {\n    opacity: 1;\n    transform: translate(-50%, -50%) scale(1.1);\n    animation: pulse 1s infinite alternate;\n}\n\n@keyframes pulse {\n    from {\n        transform: translate(-50%, -50%) scale(1);\n    }\n    to {\n        transform: translate(-50%, -50%) scale(1.1);\n    }\n}\n\n.hit-announcement h3, .sunk-announcement h3 {\n    font-size: 28px;\n    margin-bottom: 10px;\n    font-weight: 700;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.hit-announcement p, .sunk-announcement p {\n    font-size: 18px;\n    margin: 0;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/resources/styles.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\\n\\n* {\\n    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;\\n    box-sizing: border-box;\\n    margin: 0;\\n    padding: 0;\\n}\\n\\nbody {\\n    color: #F9FAFB;\\n    background-color: #0F1115;\\n    display: grid;\\n    grid-template-columns: 1fr;\\n    grid-template-rows: 70px 1fr 60px;\\n    margin: 0 auto;\\n    height: 100vh;\\n    border-bottom: 1px solid rgba(249, 250, 251, 0.1);\\n    font-size: 16px;\\n    line-height: 1.5;\\n    letter-spacing: -0.011em;\\n}\\n\\nheader {\\n    grid-row: 1 / 2;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    border-bottom: 1px solid rgba(249, 250, 251, 0.1);\\n}\\n\\n.header-container {\\n    width: 1200px;\\n    margin: 0 auto;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 0 20px;\\n}\\n\\n.header-container h1 {\\n    font-weight: 700;\\n    font-size: 24px;\\n    background: linear-gradient(90deg, #f9fafb 0%, #9ca3af 100%);\\n    -webkit-background-clip: text;\\n    -webkit-text-fill-color: transparent;\\n    background-clip: text;\\n}\\n\\n.updates {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 40px;\\n    background-color: rgba(249, 250, 251, 0.05);\\n    padding: 0 16px;\\n    border-radius: 6px;\\n    font-weight: 500;\\n}\\n\\nmain {\\n    padding-top: 60px;\\n    grid-column: 1 / 2;\\n    grid-row: 2 / 3;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: flex-start;\\n    align-items: center;\\n}\\n\\n.grid-identifier {\\n    margin-top: -20px;\\n    height: 40px;\\n    display: flex;\\n    align-items: flex-start;\\n    gap: 550px;\\n    font-weight: 600;\\n}\\n\\n.game-space {\\n    width: 1200px;\\n    height: 400px;\\n    margin: 0 auto;\\n    display: grid;\\n    place-items: start center;\\n    grid-template-columns: 1fr 1fr;\\n    grid-template-rows: 1fr;\\n    gap: 20px;\\n}\\n\\n.one {\\n    grid-column: 1 / 2;\\n}\\n\\n.two {\\n    grid-column: 2 / 3;\\n}\\n\\n.player-space {\\n    width: 400px;\\n    height: inherit;\\n    display: grid;\\n    grid-template-columns: 1fr;\\n    grid-template-rows: 20px 1fr;\\n}\\n\\n.columns {\\n    grid-row: 1 / 2;\\n    height: 25px;\\n    padding-left: 25px;\\n    display: grid;\\n    grid-template-columns: repeat(10, 1fr);\\n    justify-items: center;\\n    align-items: start;\\n    color: rgba(249, 250, 251, 0.7);\\n}\\n\\n.rows-and-board {\\n    grid-row: 2 / 3;\\n    display: grid;\\n    grid-template-columns: 25px 1fr;\\n}\\n\\n.rows-identity {\\n    display: grid;\\n    grid-template-rows: repeat(10, 1fr);\\n    justify-items: center;\\n    align-items: center;\\n    grid-column: 1 / 2;\\n    color: rgba(249, 250, 251, 0.7);\\n}\\n\\n.rows-and-board div:nth-child(2) {\\n    grid-column: 2 / 3;\\n}\\n\\n.player-one-board,\\n.player-two-board {\\n    border: 1px solid rgba(249, 250, 251, 0.1);\\n    display: grid;\\n    grid-template-columns: repeat(10, 1fr);\\n    grid-template-rows: repeat(10, 1fr);\\n    gap: 2px;\\n    background-color: rgba(249, 250, 251, 0.05);\\n    border-radius: 6px;\\n    overflow: hidden;\\n}\\n\\n.cell {\\n    background-color: #1A1D24;\\n    display: grid;\\n    place-content: center;\\n    transition: all 0.2s ease;\\n    font-size: 15px;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.cell:hover {\\n    background-color: #2D3748;\\n    cursor: pointer;\\n}\\n\\n/* Ship display styles */\\n.player-ship {\\n    background-color: rgba(76, 81, 191, 0.3) !important;\\n    border: 1px solid rgba(76, 81, 191, 0.5);\\n}\\n\\n.hit-ship {\\n    background-color: rgba(52, 211, 153, 0.8) !important;\\n    color: #1A1D24;\\n    font-weight: bold;\\n}\\n\\n.sunk-ship {\\n    background-color: rgba(56, 189, 248, 0.8) !important;\\n    color: #1A1D24;\\n    font-weight: bold;\\n}\\n\\n.miss-hit {\\n    color: rgba(249, 250, 251, 0.7);\\n}\\n\\n.random {\\n    margin: 40px auto 0;\\n    width: 1200px;\\n    height: 100px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 20px;\\n}\\n\\n.random * {\\n    cursor: pointer;\\n    color: #F9FAFB;\\n}\\n\\n#randomizeButton, .restart, #playButton {\\n    background-color: transparent;\\n    border: 1px solid rgba(249, 250, 251, 0.2);\\n    border-radius: 6px;\\n    padding: 12px 20px;\\n    font-weight: 500;\\n    transition: all 0.2s ease;\\n    min-width: 120px;\\n}\\n\\n#randomizeButton:hover, .restart:hover {\\n    background-color: rgba(249, 250, 251, 0.05);\\n    border-color: rgba(249, 250, 251, 0.3);\\n}\\n\\n#playButton {\\n    background: linear-gradient(90deg, #4F46E5 0%, #6366F1 100%);\\n    border: none;\\n}\\n\\n#playButton:hover {\\n    opacity: 0.9;\\n}\\n\\nfooter {\\n    grid-column: 1 / 2;\\n    grid-row: 3 / 4;\\n    align-self: center;\\n    margin: 0 auto;\\n    width: 1200px;\\n    display: flex;\\n    justify-content: space-between;\\n    padding: 0 20px;\\n    color: rgba(249, 250, 251, 0.6);\\n    font-size: 14px;\\n}\\n\\n.fun-stuff {\\n    display: flex;\\n    justify-content: space-evenly;\\n    gap: 20px;\\n}\\n\\n.fun-stuff p {\\n    cursor: pointer;\\n    transition: color 0.2s ease;\\n}\\n\\n.fun-stuff p:hover {\\n    color: #F9FAFB;\\n}\\n\\n/* Popup styling */\\n.popup-container {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background-color: rgba(0, 0, 0, 0.7);\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    z-index: 100;\\n}\\n\\n.popup {\\n    background-color: #1A1D24;\\n    padding: 30px;\\n    border-radius: 10px;\\n    width: 400px;\\n    text-align: center;\\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\\n    border: 1px solid rgba(249, 250, 251, 0.1);\\n}\\n\\n.popup h2 {\\n    margin-bottom: 20px;\\n    background: linear-gradient(90deg, #4F46E5 0%, #6366F1 100%);\\n    -webkit-background-clip: text;\\n    -webkit-text-fill-color: transparent;\\n    background-clip: text;\\n    font-weight: 700;\\n}\\n\\n.popup p {\\n    margin-bottom: 25px;\\n    color: rgba(249, 250, 251, 0.9);\\n}\\n\\n/* Hit announcement popup */\\n.hit-announcement {\\n    position: fixed;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    background: linear-gradient(135deg, rgba(79, 70, 229, 0.9) 0%, rgba(52, 211, 153, 0.9) 100%);\\n    color: white;\\n    padding: 20px 40px;\\n    border-radius: 12px;\\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\\n    z-index: 90;\\n    text-align: center;\\n    opacity: 0;\\n    transition: opacity 0.3s ease, transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\\n    pointer-events: none;\\n}\\n\\n/* Sunk ship announcement popup */\\n.sunk-announcement {\\n    position: fixed;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    background: linear-gradient(135deg, rgba(56, 189, 248, 0.9) 0%, rgba(6, 182, 212, 0.9) 100%);\\n    color: white;\\n    padding: 20px 40px;\\n    border-radius: 12px;\\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);\\n    z-index: 90;\\n    text-align: center;\\n    opacity: 0;\\n    transition: opacity 0.3s ease, transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\\n    pointer-events: none;\\n}\\n\\n.hit-announcement.show, .sunk-announcement.show {\\n    opacity: 1;\\n    transform: translate(-50%, -50%) scale(1.1);\\n    animation: pulse 1s infinite alternate;\\n}\\n\\n@keyframes pulse {\\n    from {\\n        transform: translate(-50%, -50%) scale(1);\\n    }\\n    to {\\n        transform: translate(-50%, -50%) scale(1.1);\\n    }\\n}\\n\\n.hit-announcement h3, .sunk-announcement h3 {\\n    font-size: 28px;\\n    margin-bottom: 10px;\\n    font-weight: 700;\\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\n}\\n\\n.hit-announcement p, .sunk-announcement p {\\n    font-size: 18px;\\n    margin: 0;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","// GameBoard class represents the game board for placing ships and handling attacks\nclass GameBoard {\n    constructor() {\n        this.board = []; // 2D array representing the game board (Graph data structure: adjacency matrix)\n        this.generateBoard(); // Initialize the board\n        this.shipsHeld = []; // Array to hold ships placed on the board\n    }\n\n    // Method to generate a 10x10 game board initialized with zeros\n    generateBoard() {\n        const rows = 10;\n        const columns = 10;\n        const battleShipBoardAdjacencyMatrix = [];\n\n        for (let counter = 0; counter < rows; counter++) {\n            battleShipBoardAdjacencyMatrix.push(new Array(columns).fill(0));\n        }\n\n        this.board.push(...battleShipBoardAdjacencyMatrix);\n    }\n\n    // Method to convert an alphabet character to its corresponding index\n    alphabetToIndex(alphabet) {\n        const alphas = Array.from(Array(10)).map((e, i) => i + 65);\n        const alphabets = alphas.map((x) => String.fromCharCode(x));\n        return alphabets.indexOf(alphabet);\n    }\n\n    // Method to check if two arrays are equal\n    arraysEqual(arrayOne, arrayTwo) {\n        return arrayOne.every((value, index) => value === arrayTwo[index]);\n    }\n\n    // Method to place a ship on the board at specified start and end coordinates\n    placeShip([startXCoordinate, startYCoordinate], [endXCoordinate, endYCoordinate], shipObject) {\n        const [shipStartXCoord, shipStartYCood] = [startXCoordinate, this.alphabetToIndex(startYCoordinate)];\n        const [shipEndXCoord, shipEndYCoord] = [endXCoordinate, this.alphabetToIndex(endYCoordinate)];\n        let shipLength = shipObject.length;\n\n        // Check for occupied slots\n        if (shipStartXCoord === shipEndXCoord) { // Horizontal placement\n            for (let i = 0; i < shipLength; i++) {\n                if (this.board[shipStartXCoord][shipStartYCood + i] !== 0) {\n                    throw new Error('Slot already occupied');\n                }\n            }\n        } \n        \n        if (shipStartYCood === shipEndYCoord) { // Vertical placement\n            for (let i = 0; i < shipLength; i++) {\n                if (this.board[shipStartXCoord + i][shipStartYCood] !== 0) {\n                    throw new Error('Slot already occupied');\n                }\n            }\n        }\n\n        // Place a one (length) sized ship\n        if (shipObject.length === 1 || this.arraysEqual([shipStartXCoord, shipStartYCood], [shipEndXCoord, shipEndYCoord])) {\n            this.board[shipStartXCoord][shipStartYCood] = 1;\n            shipObject.populateCoordinatesStore([shipStartXCoord, shipStartYCood]);\n        }\n\n        // Horizontal placement of ship of length > 1\n        if (shipStartXCoord === shipEndXCoord) {\n            for (let i = 0; i < shipLength; i++) {\n                this.board[shipStartXCoord][shipStartYCood + i] = 1;\n                shipObject.populateCoordinatesStore([shipStartXCoord, shipStartYCood + i]);\n            }\n        }\n\n        // Vertical placement of ship of length > 1\n        if (shipStartYCood === shipEndYCoord) {\n            for (let i = 0; i < shipLength; i++) {\n                this.board[shipStartXCoord + i][shipStartYCood] = 1;\n                shipObject.populateCoordinatesStore([shipStartXCoord + i, shipStartYCood]);\n            }\n        }\n\n        // Add the ship to holdings\n        this.shipsHeld.push(shipObject);\n    }\n\n    // Method to handle an attack on the board at specified coordinates\n    receiveAttack([targetXCoordinate, targetYCoordinate]) {\n        const [hitXCoordinate, hitYCoordinate] = [targetXCoordinate, this.alphabetToIndex(targetYCoordinate)];\n\n        if (this.board[hitXCoordinate][hitYCoordinate] === 1) {\n            this.updateBoardOnSuccessfulShot([hitXCoordinate, hitYCoordinate]);\n            const hitShip = this.findShipHoldingTargetCoordinates([hitXCoordinate, hitYCoordinate]);\n            hitShip.hit();\n            hitShip.removeHitCoordinates([hitXCoordinate, hitYCoordinate]);\n            const sinkStatus = hitShip.isSunk();\n            if (sinkStatus) this.removeSunkShipFromBoard(hitShip);\n            return true;\n        };\n\n        this.updateBoardOnMissedShot([hitXCoordinate, hitYCoordinate]);\n        return false;\n    }\n\n    // Method to find the ship holding the target coordinates\n    findShipHoldingTargetCoordinates([targetXCoordinate, targetYCoordinate]) {\n        for (const ship of this.shipsHeld) {\n            const matchingCoordinate = ship.coordinates.find(coordinate => \n                coordinate[0] === targetXCoordinate && coordinate[1] === targetYCoordinate\n            );\n            if (matchingCoordinate) return ship;\n        }\n        return null;\n    }\n    \n    // Method to update the board on a successful shot\n    updateBoardOnSuccessfulShot([convertedTargetX, convertedTargetY]) {\n        this.board[convertedTargetX].splice(convertedTargetY, 1, 'X');\n    }\n    \n    // Method to update the board on a missed shot\n    updateBoardOnMissedShot([convertedTargetX, convertedTargetY]) {\n        this.board[convertedTargetX].splice(convertedTargetY, 1, 'O');\n    }\n    \n    // Method to remove a sunk ship from the board\n    removeSunkShipFromBoard(shipObject) {\n        const sunkShipIndex = this.shipsHeld.indexOf(shipObject);\n        this.shipsHeld.splice(sunkShipIndex, 1);\n    }\n\n    // Method to report if all ships have been sunk\n    overallShipSinkStatus() {\n        return this.shipsHeld.length === 0;\n    }\n}\n\nexport { GameBoard };","import { GameBoard } from \"./gameBoard\";\n\nclass Player {\n    constructor(type) {\n        this.type = type;\n        this.gameBoard = new GameBoard();\n    }\n\n    // Method to check if player is a computer.\n    isComputer() {\n        return this.type === 'computer';\n    }\n\n    // Method to check if the player is a real player.\n    isRealPlayer() {\n        return this.type === 'real';\n    }\n}\n\nexport { Player };","// Ship class represents a ship with a specific length, tracking hits and sunk status\nclass Ship {\n    constructor(length) {\n        this.length = length; // Length of the ship\n        this.numberOfHits = 0; // Number of times the ship has been hit\n        this.sunk = false; // Status indicating if the ship is sunk\n        this.coordinates = []; // Coordinates occupied by the ship\n    }\n\n    // Method to record a hit on the ship\n    hit() {\n        if (this.numberOfHits < this.length) {\n            this.numberOfHits += 1;\n        }\n    }\n\n    // Method to check if the ship is sunk\n    isSunk() {\n        // A ship is considered sunk if the number of hits equals its length and all coordinates are hit\n        if (this.numberOfHits === this.length && this.coordinates.length === 0) {\n            this.sunk = true;\n        }\n        return this.sunk;\n    }\n\n    // Method to store the coordinates occupied by the ship\n    populateCoordinatesStore([xCoordinate, yCoordinate]) {\n        this.coordinates.push([xCoordinate, yCoordinate]);\n    }\n\n    // Method to remove coordinates from the ship's store once hit\n    removeHitCoordinates([xCoordinate, yCoordinate]) {\n        this.coordinates = this.coordinates.filter((coordinate) => coordinate[0] !== xCoordinate || coordinate[1] !== yCoordinate);\n    }\n}\n\nexport { Ship };","import { Player } from \"./player\";\nimport { Ship } from \"./ship\";\n\n// Create players\nconst computerPlayer = new Player('computer');\nconst realPlayer = new Player('real');\n\n// Map to track ship positions and hit status\nconst shipPositions = {\n    computerShips: new Map(),\n    playerShips: new Map()\n};\n\n// Define the computer ships\nconst computerShips = [\n    new Ship(5), // Carrier\n    new Ship(4), // Battleship\n    new Ship(3), // Destroyer\n    new Ship(3), // Submarine\n    new Ship(2)  // Patrol Boat\n];\n\n// Real player's ships\nconst realPlayerShips = [\n    new Ship(5), // Carrier\n    new Ship(4), // Battleship\n    new Ship(3), // Destroyer\n    new Ship(3), // Submarine\n    new Ship(2)  // Patrol Boat\n];\n\n// Function to get random coordinates for a ship\nconst getRandomCoordinates = (shipLength) => {\n    const isHorizontal = Math.random() < 0.5;\n    const maxIndex = 10 - shipLength;\n\n    let startX, startY, endX, endY;\n\n    if (isHorizontal) {\n        startX = Math.floor(Math.random() * 10);\n        startY = Math.floor(Math.random() * (maxIndex + 1));\n        endX = startX;\n        endY = startY + shipLength - 1;\n    } else {\n        startX = Math.floor(Math.random() * (maxIndex + 1));\n        startY = Math.floor(Math.random() * 10);\n        endX = startX + shipLength - 1;\n        endY = startY;\n    }\n\n    const startYAlpha = String.fromCharCode(65 + startY);\n    const endYAlpha = String.fromCharCode(65 + endY);\n\n    return [[startX, startYAlpha], [endX, endYAlpha]];\n};\n\n// Function to check if a ship can be placed at the given coordinates\nconst canPlaceShip = (gameBoard, startX, startYAlpha, endX, endYAlpha) => {\n    const startY = startYAlpha.charCodeAt(0) - 65;\n    const endY = endYAlpha.charCodeAt(0) - 65;\n\n    if (startX === endX) { // Horizontal placement\n        for (let i = startY; i <= endY; i++) {\n            if (gameBoard.board[startX][i] !== 0) return false;\n        }\n    } else { // Vertical placement\n        for (let i = startX; i <= endX; i++) {\n            if (gameBoard.board[i][startY] !== 0) return false;\n        }\n    }\n    return true;\n};\n\n// Helper function to track ship positions\nconst trackShipPosition = (ship, startX, startYAlpha, endX, endYAlpha, isComputer) => {\n    const startY = startYAlpha.charCodeAt(0) - 65;\n    const endY = endYAlpha.charCodeAt(0) - 65;\n    const positions = [];\n    \n    if (startX === endX) { // Horizontal\n        for (let i = 0; i < ship.length; i++) {\n            const cellIndex = startX * 10 + (startY + i);\n            positions.push(cellIndex);\n        }\n    } else { // Vertical\n        for (let i = 0; i < ship.length; i++) {\n            const cellIndex = (startX + i) * 10 + startY;\n            positions.push(cellIndex);\n        }\n    }\n    \n    // Store in the shipPositions map\n    const mapToUse = isComputer ? shipPositions.computerShips : shipPositions.playerShips;\n    const shipId = `ship_${Date.now()}_${Math.floor(Math.random() * 1000)}`;\n    mapToUse.set(shipId, {\n        positions: positions,\n        hits: new Set(),\n        length: ship.length,\n        isSunk: false\n    });\n    \n    return shipId;\n};\n\n// Function to check if a ship is sunk\nconst checkIfShipSunk = (shipId, hitIndex, isComputer) => {\n    const mapToUse = isComputer ? shipPositions.computerShips : shipPositions.playerShips;\n    const ship = mapToUse.get(shipId);\n    \n    if (!ship) return false;\n    \n    // Add this hit\n    ship.hits.add(hitIndex);\n    \n    // Check if all positions are hit\n    const isSunk = ship.positions.every(pos => ship.hits.has(pos));\n    \n    if (isSunk && !ship.isSunk) {\n        ship.isSunk = true;\n        return true;\n    }\n    \n    return false;\n};\n\n// Function to find which ship was hit\nconst findHitShip = (hitIndex, isComputer) => {\n    const mapToUse = isComputer ? shipPositions.computerShips : shipPositions.playerShips;\n    \n    for (const [shipId, ship] of mapToUse.entries()) {\n        if (ship.positions.includes(hitIndex) && !ship.isSunk) {\n            return shipId;\n        }\n    }\n    \n    return null;\n};\n\n// Function to get all positions of a ship\nconst getShipPositions = (shipId, isComputer) => {\n    const mapToUse = isComputer ? shipPositions.computerShips : shipPositions.playerShips;\n    return mapToUse.get(shipId)?.positions || [];\n};\n\n// Placer function to place all ships on the board\nconst placeShipsOnBoard = (gameBoard, ships, isComputer) => {\n    ships.forEach(ship => {\n        let placed = false;\n        while (!placed) {\n            const [[startX, startYAlpha], [endX, endYAlpha]] = getRandomCoordinates(ship.length);\n\n            if (canPlaceShip(gameBoard, startX, startYAlpha, endX, endYAlpha)) {\n                gameBoard.placeShip([startX, startYAlpha], [endX, endYAlpha], ship);\n                trackShipPosition(ship, startX, startYAlpha, endX, endYAlpha, isComputer);\n                placed = true;\n            }\n        }\n    });\n};\n\n// Place computer ships on its board.\nplaceShipsOnBoard(computerPlayer.gameBoard, computerShips, true);\nplaceShipsOnBoard(realPlayer.gameBoard, realPlayerShips, false);\n\nclass GameDisplay {\n    constructor(contentHolder, realPlayer, computerPlayer) {\n        this.contentHolder = contentHolder;\n        this.realPlayer = realPlayer;\n        this.computerPlayer = computerPlayer;\n        this.activePlayer = this.realPlayer;\n        this.computerMoves = new Set();\n\n        // Bind methods with event listners to class to keep context of this.\n        this.fireAttackOnBoardHandler = this.fireAttackOnBoard.bind(this);\n        this.randomizePlayerShipsHandler = this.randomizePlayerShips.bind(this);\n    }\n\n    createGrid(gridContainer) {\n        const rows = 10, columns = 10;\n\n        for (let row = 0; row < rows; row++) {\n            for (let column = 0; column < columns; column++) {\n                const cell = document.createElement('div');\n                cell.classList.add('cell');\n                gridContainer.appendChild(cell);\n            }\n        }\n    }\n\n    createPlayerGrids() {\n        // Get UI Elements.\n        const gridBoxOne = document.querySelector('.player-one-board'); \n        const gridBoxTwo = document.querySelector('.player-two-board');\n        const activeplayerIndicator = document.querySelector('.updates p');\n\n        // Create grids and indicate first player.\n        this.createGrid(gridBoxOne);\n        this.createGrid(gridBoxTwo);\n        activeplayerIndicator.textContent = `Your turn`;\n    }\n\n    updateActivePlayer(activeplayer) {\n        const activeplayerType = activeplayer.type;\n        // Text indicator update\n        const activeplayerIndicator = document.querySelector('.updates p');\n        activeplayerIndicator.textContent = '';\n        \n        switch (activeplayerType) {\n            case 'computer': \n                activeplayerIndicator.textContent = 'Computer\\'s turn';\n                break;\n            case 'real':\n                activeplayerIndicator.textContent = 'Your turn';\n                break;\n            default: \n                activeplayerIndicator.textContent = 'Unknown player type';\n        }\n    }\n\n    fireAttackOnBoard(event) {\n        if (event.target.classList.contains('cell')) {\n            const slot = event.target;\n            if (slot.textContent !== '') return; // Prevent human player from firing a hit slot.\n            const hitPlayerBoard = slot.parentNode.getAttribute('class');\n            const index = [...slot.parentNode.children].indexOf(slot);\n            const row = Math.floor(index / 10);\n            const column = index % 10;\n    \n            const [hitXCoordinate, hitYCoordinate] = [row, this.indexToAlphabet(column)];\n    \n            // Drop attack on board\n            let attackResult = this.dropAttackOnBoard(hitPlayerBoard, [hitXCoordinate, hitYCoordinate]);\n            this.updateBoardOnUI(hitPlayerBoard, index, slot, attackResult.isHit);\n            \n            // Check if a ship was hit\n            if (attackResult.isHit) {\n                // Find which ship was hit\n                const shipId = findHitShip(index, true); // true means it's a computer ship\n                \n                if (shipId) {\n                    // Check if the ship is now sunk\n                    const isSunk = checkIfShipSunk(shipId, index, true);\n                    \n                    if (isSunk) {\n                        // Get all positions of the ship and update their styling\n                        const shipPositions = getShipPositions(shipId, true);\n                        this.updateSunkShipStyling(shipPositions, hitPlayerBoard);\n                        this.showSunkAnnouncement(shipPositions.length);\n                    } else {\n                        // Just show regular hit announcement\n                        this.showHitAnnouncement(hitYCoordinate + (hitXCoordinate + 1));\n                    }\n                }\n            }\n    \n            // Check for winner\n            if (attackResult.winStatus) {\n                console.log(\"Win condition met!\");\n                this.endGame(hitPlayerBoard);\n            } else {\n                // Switch player turns if no winner.\n                this.switchPlayerTurn();\n            }\n        }\n    }    \n\n    dropAttackOnBoard(hitPlayerBoard, [targetXCoordinate, targetYCoordinate]) {\n        let winStatus = undefined;\n        let isHit = false;\n\n        // Handle hits made to computer board.\n        if (hitPlayerBoard === 'player-two-board') {\n            let attackStatus = this.computerPlayer.gameBoard.receiveAttack([targetXCoordinate, targetYCoordinate]);\n            if (attackStatus) {\n                winStatus = this.computerPlayer.gameBoard.overallShipSinkStatus();\n                isHit = this.computerPlayer.gameBoard.board[targetXCoordinate][targetYCoordinate.charCodeAt(0) - 65] === 'X';\n            }\n        }\n\n        // Handle hits made to real player board.\n        if (hitPlayerBoard === 'player-one-board') {\n            let attackStatus = this.realPlayer.gameBoard.receiveAttack([targetXCoordinate, targetYCoordinate]);\n            if (attackStatus) {\n                winStatus = this.realPlayer.gameBoard.overallShipSinkStatus();\n                isHit = this.realPlayer.gameBoard.board[targetXCoordinate][targetYCoordinate.charCodeAt(0) - 65] === 'X';\n            }\n        }\n\n        return { winStatus, isHit };\n    }\n\n    updateBoardOnUI(hitPlayerBoard, hitSlotIndex, hitSlot, isHit) {\n        // Update computer's board\n        if (hitPlayerBoard === 'player-two-board') {\n            const computerLogicBoardCopy = this.computerPlayer.gameBoard.board.slice().flat();\n            const updateSymbol = computerLogicBoardCopy[hitSlotIndex];\n            hitSlot.textContent = updateSymbol;\n            \n            // Apply appropriate styling\n            if (isHit) {\n                hitSlot.classList.add('hit-ship');\n            } else if (updateSymbol === 'O') {\n                hitSlot.classList.add('miss-hit');\n            }\n        }\n\n        // Update real player's board\n        if (hitPlayerBoard === 'player-one-board') {\n            const realPlayerLogicBoardCopy = this.realPlayer.gameBoard.board.slice().flat();\n            const updateSymbol = realPlayerLogicBoardCopy[hitSlotIndex];\n            hitSlot.textContent = updateSymbol;\n            \n            // Apply appropriate styling\n            if (isHit) {\n                hitSlot.classList.add('hit-ship');\n            } else if (updateSymbol === 'O') {\n                hitSlot.classList.add('miss-hit');\n            }\n        }\n    }\n    \n    updateSunkShipStyling(shipPositions, hitPlayerBoard) {\n        const board = hitPlayerBoard === 'player-two-board' \n            ? document.querySelector('.player-two-board')\n            : document.querySelector('.player-one-board');\n            \n        shipPositions.forEach(position => {\n            const cell = board.children[position];\n            cell.classList.remove('hit-ship');\n            cell.classList.add('sunk-ship');\n        });\n    }\n    \n    indexToAlphabet(index) {\n        const alphas = Array.from(Array(10)).map((e, i) => i + 65);\n        const alphabets = alphas.map((x) => String.fromCharCode(x));\n        return alphabets[index];\n    }\n\n    // Method to swap player turns.\n    switchPlayerTurn() {\n        console.log(`Old player: ${this.activePlayer.type}`);\n    \n        // Correctly switch player turns\n        this.activePlayer = this.activePlayer === this.realPlayer ? this.computerPlayer : this.realPlayer;\n        console.log(`Active player: ${this.activePlayer.type}`);\n    \n        const playerGrid = document.querySelector('.player-one-board');\n        const computerGrid = document.querySelector('.player-two-board');\n    \n        if (this.activePlayer.type === 'real') {\n            // Player should attack the computer's grid\n            computerGrid.addEventListener('click', this.fireAttackOnBoardHandler);\n            playerGrid.removeEventListener('click', this.fireAttackOnBoardHandler);\n        } else {\n            // Disable player's click during the computer's turn\n            computerGrid.removeEventListener('click', this.fireAttackOnBoardHandler);\n            playerGrid.removeEventListener('click', this.fireAttackOnBoardHandler);\n    \n            // Automate computer's move after a short delay\n            setTimeout(() => {\n                this.computerMove();\n            }, 500);\n        }\n    \n        this.updateActivePlayer(this.activePlayer);\n    }\n    \n    computerMove() {\n        let randomIndex;\n    \n        // Keep generating a new move until an unused spot is found\n        do {\n            randomIndex = Math.floor(Math.random() * 100);\n        } while (this.computerMoves.has(randomIndex));\n    \n        // Record this move to prevent repeating it\n        this.computerMoves.add(randomIndex);\n    \n        const row = Math.floor(randomIndex / 10);\n        const column = randomIndex % 10;\n        const [hitXCoordinate, hitYCoordinate] = [row, this.indexToAlphabet(column)];\n    \n        // Perform the attack\n        let attackResult = this.dropAttackOnBoard('player-one-board', [hitXCoordinate, hitYCoordinate]);\n    \n        // Update the UI\n        const gridBoxOne = document.querySelector('.player-one-board');\n        const slot = gridBoxOne.children[randomIndex];\n        this.updateBoardOnUI('player-one-board', randomIndex, slot, attackResult.isHit);\n        \n        // Check if a ship was hit\n        if (attackResult.isHit) {\n            // Find which ship was hit\n            const shipId = findHitShip(randomIndex, false); // false means it's a player ship\n            \n            if (shipId) {\n                // Check if the ship is now sunk\n                const isSunk = checkIfShipSunk(shipId, randomIndex, false);\n                \n                if (isSunk) {\n                    // Get all positions of the ship and update their styling\n                    const shipPositions = getShipPositions(shipId, false);\n                    this.updateSunkShipStyling(shipPositions, 'player-one-board');\n                    this.showSunkAnnouncement(shipPositions.length, true);\n                } else {\n                    // Just show regular hit announcement\n                    this.showHitAnnouncement(hitYCoordinate + (hitXCoordinate + 1), true);\n                }\n            }\n        }\n    \n        // Check for wins or switch turns\n        if (attackResult.winStatus) {\n            this.endGame('player-one-board');\n        } else {\n            this.switchPlayerTurn();\n        }\n    }  \n    \n    showPlayerRealPlayerShipPlacement() {\n        const gridBoxOne = document.querySelector('.player-one-board');\n        const flatBoard = this.realPlayer.gameBoard.board.flat();\n\n        // Clear existing UI\n        Array.from(gridBoxOne.children).forEach(cell => {\n            cell.classList.remove('player-ship');\n        });\n\n        // Update UI with ship placements\n        flatBoard.forEach((cellValue, index) => {\n            if (cellValue === 1) {\n                gridBoxOne.children[index].classList.add('player-ship');\n            }\n        });\n    }\n\n    randomizePlayerShips() {\n        // Clear the board first\n        this.realPlayer.gameBoard.board = Array.from({ length: 10 }, () => Array(10).fill(0));\n        this.realPlayer.gameBoard.shipsHeld = [];\n\n        // Clear the ship tracking\n        shipPositions.playerShips.clear();\n\n        // Place ships randomly\n        placeShipsOnBoard(this.realPlayer.gameBoard, realPlayerShips, false);\n\n        // Update the UI to reflect the new placements\n        this.showPlayerRealPlayerShipPlacement();\n    }\n    \n    showHitAnnouncement(position, isComputer = false) {\n        // Create the announcement element if it doesn't exist\n        let hitAnnouncement = document.querySelector('.hit-announcement');\n        if (!hitAnnouncement) {\n            hitAnnouncement = document.createElement('div');\n            hitAnnouncement.classList.add('hit-announcement');\n            document.body.appendChild(hitAnnouncement);\n        }\n        \n        // Set the content of the announcement\n        hitAnnouncement.innerHTML = `\n            <h3>DIRECT HIT!</h3>\n            <p>${isComputer ? 'Computer' : 'You'} hit a ship at ${position}!</p>\n        `;\n        \n        // Show the announcement\n        hitAnnouncement.classList.add('show');\n        \n        // Hide after 2 seconds\n        setTimeout(() => {\n            hitAnnouncement.classList.remove('show');\n        }, 1500);\n    }\n    \n    showSunkAnnouncement(shipLength, isComputer = false) {\n        // Create the sunk announcement element if it doesn't exist\n        let sunkAnnouncement = document.querySelector('.sunk-announcement');\n        if (!sunkAnnouncement) {\n            sunkAnnouncement = document.createElement('div');\n            sunkAnnouncement.classList.add('sunk-announcement');\n            document.body.appendChild(sunkAnnouncement);\n        }\n        \n        // Determine ship type based on length\n        let shipType;\n        switch (shipLength) {\n            case 5: shipType = \"Carrier\"; break;\n            case 4: shipType = \"Battleship\"; break;\n            case 3: shipType = \"Cruiser\"; break;\n            case 2: shipType = \"Destroyer\"; break;\n            default: shipType = \"Ship\";\n        }\n        \n        // Set the content of the announcement\n        sunkAnnouncement.innerHTML = `\n            <h3>SHIP SUNK!</h3>\n            <p>${isComputer ? 'Computer' : 'You'} sunk a ${shipType}!</p>\n        `;\n        \n        // Show the announcement\n        sunkAnnouncement.classList.add('show');\n        \n        // Hide after 2.5 seconds\n        setTimeout(() => {\n            sunkAnnouncement.classList.remove('show');\n        }, 2500);\n    }\n       \n    startGame() {\n        // Allow real player to fire moves on computer grid.\n        const gridBoxTwo = document.querySelector('.player-two-board');\n        gridBoxTwo.addEventListener('click', this.fireAttackOnBoardHandler);\n\n        // Keep player ship visibility but reset background color\n        const gridBoxOne = document.querySelector('.player-one-board');\n        Array.from(gridBoxOne.children).forEach(cell => {\n            if (cell.classList.contains('player-ship')) {\n                // Keep the player-ship class for visibility\n                cell.style.backgroundColor = '';\n            }\n        });\n\n        // Remove randomize and play buttons.\n        const randomizeButton = document.getElementById('randomizeButton');\n        const playButton = document.getElementById('playButton');\n        \n        if (randomizeButton) randomizeButton.remove();\n        if (playButton) playButton.remove();\n    }\n\n    showEndGamePopup(winner) {\n        // Create the popup container\n        const popupContainer = document.createElement('div');\n        popupContainer.classList.add('popup-container');\n    \n        // Create the popup\n        const popup = document.createElement('div');\n        popup.classList.add('popup');\n    \n        // Create the title\n        const title = document.createElement('h2');\n        title.textContent = 'Game Over';\n    \n        // Create the winner message\n        const winnerMessage = document.createElement('p');\n        winnerMessage.textContent = `${winner} Won!`;\n    \n        // Create the restart button\n        const restartButton = document.createElement('button');\n        restartButton.classList.add('restart');\n        restartButton.textContent = 'Play Again';\n        restartButton.addEventListener('click', () => {\n            location.reload(); // Refresh the page to restart the game\n        });\n    \n        // Append elements to the popup\n        popup.appendChild(title);\n        popup.appendChild(winnerMessage);\n        popup.appendChild(restartButton);\n    \n        // Append popup to the container\n        popupContainer.appendChild(popup);\n    \n        // Append the popup container to the body\n        document.body.appendChild(popupContainer);\n    }\n\n    endGame(hitPlayerBoard) {\n        console.log(\"Game ends...\");\n        const gridBoxOne = document.querySelector('.player-one-board');\n        const gridBoxTwo = document.querySelector('.player-two-board');\n        const activeplayerIndicator = document.querySelector('.updates p');\n    \n        // Correctly remove event listeners\n        gridBoxOne.removeEventListener('click', this.fireAttackOnBoardHandler);\n        gridBoxTwo.removeEventListener('click', this.fireAttackOnBoardHandler);\n    \n        activeplayerIndicator.textContent = hitPlayerBoard === 'player-one-board' \n            ? 'Computer Wins!' \n            : 'You win!';\n        // Determine winner and show popup\n        const winner = hitPlayerBoard === 'player-one-board' ? 'Computer' : 'You';\n        this.showEndGamePopup(winner);\n    }    \n       \n}\n\n// Get UI Element for game control.\nconst gameSpace = document.querySelector('.game-space');\n\n// initialize game controller.\nconst gameDisplay = new GameDisplay(gameSpace, realPlayer, computerPlayer);\ngameDisplay.createPlayerGrids();\ngameDisplay.showPlayerRealPlayerShipPlacement();\n\n// Event listener for the randomize button\ndocument.getElementById('randomizeButton').addEventListener('click', gameDisplay.randomizePlayerShipsHandler);\n\n// Event listener for the play button\ndocument.getElementById('playButton').addEventListener('click', () => {\n    gameDisplay.startGame();\n});\n\nexport { gameDisplay };","import './resources/styles.css';\nimport { gameDisplay } from './gameDisplay';\nconsole.log(\"Template works.\");"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","locals","GameBoard","constructor","board","generateBoard","shipsHeld","battleShipBoardAdjacencyMatrix","counter","Array","fill","alphabetToIndex","alphabet","from","x","String","fromCharCode","indexOf","arraysEqual","arrayOne","arrayTwo","every","value","placeShip","startXCoordinate","startYCoordinate","endXCoordinate","endYCoordinate","shipObject","shipStartXCoord","shipStartYCood","shipEndXCoord","shipEndYCoord","shipLength","populateCoordinatesStore","receiveAttack","targetXCoordinate","targetYCoordinate","hitXCoordinate","hitYCoordinate","updateBoardOnSuccessfulShot","hitShip","findShipHoldingTargetCoordinates","hit","removeHitCoordinates","isSunk","removeSunkShipFromBoard","updateBoardOnMissedShot","ship","coordinates","find","coordinate","convertedTargetX","convertedTargetY","sunkShipIndex","overallShipSinkStatus","Player","type","gameBoard","isComputer","isRealPlayer","Ship","numberOfHits","sunk","xCoordinate","yCoordinate","filter","computerPlayer","realPlayer","shipPositions","computerShips","Map","playerShips","realPlayerShips","getRandomCoordinates","maxIndex","startX","startY","endX","endY","Math","random","floor","canPlaceShip","startYAlpha","endYAlpha","charCodeAt","trackShipPosition","positions","cellIndex","mapToUse","shipId","Date","now","set","hits","Set","checkIfShipSunk","hitIndex","add","pos","has","findHitShip","entries","includes","getShipPositions","placeShipsOnBoard","ships","forEach","placed","gameSpace","gameDisplay","contentHolder","activePlayer","computerMoves","fireAttackOnBoardHandler","fireAttackOnBoard","bind","randomizePlayerShipsHandler","randomizePlayerShips","createGrid","gridContainer","row","column","cell","classList","createPlayerGrids","gridBoxOne","gridBoxTwo","activeplayerIndicator","textContent","updateActivePlayer","activeplayer","activeplayerType","event","contains","slot","hitPlayerBoard","getAttribute","children","indexToAlphabet","attackResult","dropAttackOnBoard","updateBoardOnUI","isHit","updateSunkShipStyling","showSunkAnnouncement","showHitAnnouncement","winStatus","console","log","endGame","switchPlayerTurn","hitSlotIndex","hitSlot","updateSymbol","slice","flat","position","playerGrid","computerGrid","addEventListener","removeEventListener","setTimeout","computerMove","randomIndex","showPlayerRealPlayerShipPlacement","flatBoard","cellValue","clear","hitAnnouncement","body","innerHTML","shipType","sunkAnnouncement","startGame","backgroundColor","randomizeButton","getElementById","playButton","showEndGamePopup","winner","popupContainer","popup","title","winnerMessage","restartButton","location","reload"],"sourceRoot":""}